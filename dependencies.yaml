# Dependency list for https://github.com/rapidsai/dependency-file-generator
files:
  all:
    output: [conda]
    matrix:
      # CUDA versions match PyTorch releases, not RAPIDS
      # ref: https://pytorch.org/get-started/locally/
      cuda: ["12.9", "13.0"]
      arch: [x86_64, aarch64]
    includes:
      - checks
      - common_build
      - cuda
      - cuda_version
      - docs
      - python_build_cythonize
      - depends_on_rmm
      - depends_on_pylibcugraph
      - depends_on_cugraph
      - depends_on_cudf
      - depends_on_cupy
      - depends_on_cuml
      - depends_on_nccl
      - depends_on_pytorch
      - depends_on_pyg
      - python_run_cugraph_pyg
      - rapids_build_setuptools
      - rapids_build_skbuild
      - test_cpp
      - test_notebook
      - test_python_common
      - test_python_pylibwholegraph
  checks:
    output: none
    includes:
      - checks
      - py_version
  docs:
    output: none
    includes:
      - cuda_version
      - docs
      - py_version
      - depends_on_libwholegraph
  test_cpp:
    output: none
    includes:
      - cuda_version
      - test_cpp
      - depends_on_libwholegraph
      - depends_on_libwholegraph_tests
      - depends_on_nccl
  test_notebooks:
    output: none
    includes:
      - cuda_version
      - depends_on_pytorch
      - py_version
      - test_notebook
  test_cugraph_pyg:
    output: none
    includes:
      - cuda_version
      - depends_on_cugraph
      - depends_on_cudf
      - depends_on_pytorch
      - depends_on_cuml
      - depends_on_ogb
      - depends_on_sentence_transformers
      - py_version
      - test_python_common
      - depends_on_mkl
      - depends_on_pylibwholegraph
      - depends_on_cugraph_pyg
  test_pylibwholegraph:
    output: none
    includes:
      - cuda_version
      - depends_on_cudf
      - depends_on_pytorch
      - py_version
      - test_python_common
      - depends_on_mkl
      - depends_on_pylibwholegraph
      - test_python_pylibwholegraph
  py_build_libwholegraph:
    output: pyproject
    pyproject_dir: python/libwholegraph
    extras:
      table: build-system
    includes:
      - rapids_build_skbuild
  py_rapids_build_libwholegraph:
    output: pyproject
    pyproject_dir: python/libwholegraph
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - common_build
      - depends_on_libraft
      - depends_on_librmm
  py_run_libwholegraph:
    output: pyproject
    pyproject_dir: python/libwholegraph
    extras:
      table: project
    includes:
      - depends_on_libraft
      - depends_on_nccl
  py_build_pylibwholegraph:
    output: pyproject
    pyproject_dir: python/pylibwholegraph
    extras:
      table: build-system
    includes:
      - rapids_build_skbuild
  py_rapids_build_pylibwholegraph:
    output: pyproject
    pyproject_dir: python/pylibwholegraph
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - common_build
      - python_build_cythonize
      - depends_on_libwholegraph
      - depends_on_libraft
      - depends_on_librmm
  py_run_pylibwholegraph:
    output: pyproject
    pyproject_dir: python/pylibwholegraph
    extras:
      table: project
    includes:
      - python_run_pylibwholegraph
      - depends_on_libwholegraph
  py_test_pylibwholegraph:
    output: pyproject
    pyproject_dir: python/pylibwholegraph
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_common
      - test_python_pylibwholegraph
  py_build_cugraph_pyg:
    output: pyproject
    pyproject_dir: python/cugraph-pyg
    extras:
      table: build-system
    includes:
      - rapids_build_setuptools
  py_run_cugraph_pyg:
    output: pyproject
    pyproject_dir: python/cugraph-pyg
    extras:
      table: project
    includes:
      - depends_on_cupy
      - depends_on_pyg
      - depends_on_pylibwholegraph
      - depends_on_pylibcugraph
      - python_run_cugraph_pyg
  py_test_cugraph_pyg:
    output: pyproject
    pyproject_dir: python/cugraph-pyg
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - depends_on_pytorch
      - depends_on_cuml
      - depends_on_cugraph
      - test_python_common
      - test_python_cugraph_pyg
  cugraph_pyg_dev:
    matrix:
      cuda: ["12.9", "13.0"]
      arch: [x86_64, aarch64]
    output: conda
    conda_dir: python/cugraph-pyg/conda
    includes:
      - checks
      - depends_on_pylibcugraph
      - depends_on_pyg
      - depends_on_pytorch
      - test_python_common
channels:
  - rapidsai
  - rapidsai-nightly
  - conda-forge
dependencies:
  checks:
    common:
      - output_types: [conda, requirements]
        packages:
          - pre-commit
  cuda_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.0"
            packages:
              - cuda-version=12.0
          - matrix:
              cuda: "12.1"
            packages:
              - cuda-version=12.1
          - matrix:
              cuda: "12.2"
            packages:
              - cuda-version=12.2
          - matrix:
              cuda: "12.4"
            packages:
              - cuda-version=12.4
          - matrix:
              cuda: "12.5"
            packages:
              - cuda-version=12.5
          - matrix:
              cuda: "12.6"
            packages:
              - cuda-version=12.6
          - matrix:
              cuda: "12.8"
            packages:
              - cuda-version=12.8
          - matrix:
              cuda: "12.9"
            packages:
              - cuda-version=12.9
          - matrix:
              cuda: "13.0"
            packages:
              - cuda-version=13.0
  cuda:
    common:
      - output_types: [conda]
        packages:
          - cuda-cudart-dev
          - cuda-nvml-dev
          - cuda-nvtx-dev
          - cuda-profiler-api
          - libcublas-dev
          - libcurand-dev
          - libcusolver-dev
          - libcusparse-dev
  common_build:
    common:
      - output_types: [conda, pyproject]
        packages:
          - &cmake_ver cmake>=3.30.4
          - ninja
      - output_types: [conda]
        packages:
          - cuda-nvcc
    specific:
      - output_types: [conda]
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - gcc_linux-64=14.*
          - matrix:
              arch: aarch64
            packages:
              - gcc_linux-aarch64=14.*
  docs:
    common:
      - output_types: [conda]
        packages:
          - breathe
          - doxygen
          - graphviz
  py_version:
    specific:
      - output_types: [conda]
        matrices:
          - matrix:
              py: "3.10"
            packages:
              - python=3.10
          - matrix:
              py: "3.11"
            packages:
              - python=3.11
          - matrix:
              py: "3.12"
            packages:
              - python=3.12
          - matrix:
              py: "3.13"
            packages:
              - python=3.13
          - matrix:
            packages:
              - python>=3.10,<3.14
  python_build_cythonize:
    common:
      - output_types: [conda, pyproject, requirements]
        packages:
          - cython>=3.0.0
  python_run_pylibwholegraph:
    common:
      - output_types: [conda, pyproject, requirements]
        packages:
          - &numpy numpy>=1.23,<3.0a0
  python_run_cugraph_pyg:
    common:
      - output_types: [conda, pyproject, requirements]
        packages:
          - *numpy
          - packaging
          - pandas
  rapids_build_skbuild:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - &rapids_build_backend rapids-build-backend>=0.4.0,<0.5.0.dev0
      - output_types: conda
        packages:
          - scikit-build-core>=0.10.0
      - output_types: [requirements, pyproject]
        packages:
          - scikit-build-core[pyproject]>=0.10.0
  rapids_build_setuptools:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - *rapids_build_backend
          - setuptools>=61.0.0
          - wheel
  test_cpp:
    common:
      - output_types: conda
        packages:
          - *cmake_ver
  test_notebook:
    common:
      - output_types: [conda, requirements]
        packages:
          - ipython
          - nbconvert
          - notebook>=0.5.0
          - ogb
  test_python_common:
    common:
      - output_types: [conda, pyproject, requirements]
        packages:
          - pytest
          - pytest-benchmark
          - pytest-cov
          - pytest-xdist
  test_python_cugraph_pyg:
    common:
      - output_types: [conda, pyproject, requirements]
        packages:
          - ogb
          - sentence-transformers
  test_python_pylibwholegraph:
    common:
      - output_types: [conda, pyproject, requirements]
        packages:
          - pytest-forked
          - scipy
  depends_on_pytorch:
    common:
      - output_types: [conda]
        packages:
          - torchdata
          - pydantic
    specific:
      - output_types: [requirements]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - --extra-index-url=https://download.pytorch.org/whl/cu126
          - matrix:
              cuda: "13.*"
            packages:
              # TODO: switch from nightlies to releases when there are pytorch CUDA 13 released packages
              #  ref: https://github.com/pytorch/pytorch/issues/159779
              - --extra-index-url=https://download.pytorch.org/whl/nightly/cu130
          - matrix:
            packages:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - torch>=2.3
          - matrix:
              cuda: "13.*"
            packages:
              # TODO: remove this 'dev0' (which allows nightlies) once there are pytorch CUDA 13 released packages
              #  ref: https://github.com/pytorch/pytorch/issues/159779
              - &pytorch_pip torch>=2.9.0.dev0
          - matrix:
            packages:
              - *pytorch_pip
  depends_on_nccl:
    common:
      - output_types: conda
        packages:
          - nccl>=2.19
    specific:
      - output_types: [pyproject, requirements]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - nvidia-nccl-cu12>=2.19
          - matrix:
            packages:
  depends_on_ogb:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - ogb
  # for MovieLens example
  depends_on_sentence_transformers:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - sentence-transformers
  depends_on_pyg:
    common:
      - output_types: [conda]
        packages:
          - pytorch_geometric>=2.5,<2.7
      - output_types: [pyproject, requirements]
        packages:
          - torch-geometric>=2.5,<2.7
  depends_on_pylibwholegraph:
    common:
      - output_types: conda
        packages:
          - &pylibwholegraph_unsuffixed pylibwholegraph==25.10.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - pylibwholegraph-cu12==25.10.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - pylibwholegraph-cu13==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*pylibwholegraph_unsuffixed]}
  depends_on_libraft:
    common:
      - output_types: conda
        packages:
          - &libraft_unsuffixed libraft==25.10.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - libraft-cu12==25.10.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - libraft-cu13==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*libraft_unsuffixed]}
  depends_on_librmm:
    common:
      - output_types: conda
        packages:
          - librmm==25.10.*,>=0.0.0a0
          - &librmm_unsuffixed librmm==25.10.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - librmm-cu12==25.10.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - librmm-cu13==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*librmm_unsuffixed]}
  depends_on_libwholegraph:
    common:
      - output_types: conda
        packages:
          - &libwholegraph_unsuffixed libwholegraph==25.10.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - libwholegraph-cu12==25.10.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - libwholegraph-cu13==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*libwholegraph_unsuffixed]}
  depends_on_libwholegraph_tests:
    common:
      - output_types: conda
        packages:
          - libwholegraph-tests==25.10.*,>=0.0.0a0
  depends_on_rmm:
    common:
      - output_types: conda
        packages:
          - &rmm_unsuffixed rmm==25.10.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - rmm-cu12==25.10.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - rmm-cu13==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*rmm_unsuffixed]}
  depends_on_pylibcugraph:
    common:
      - output_types: conda
        packages:
          - &pylibcugraph_unsuffixed pylibcugraph==25.10.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - pylibcugraph-cu12==25.10.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - pylibcugraph-cu13==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*pylibcugraph_unsuffixed]}
  depends_on_cugraph:
    common:
      - output_types: conda
        packages:
          - &cugraph_unsuffixed cugraph==25.10.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - cugraph-cu12==25.10.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - cugraph-cu13==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*cugraph_unsuffixed]}
  depends_on_cuml:
    common:
      - output_types: conda
        packages:
          - &cuml_unsuffixed cuml==25.10.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - cuml-cu12==25.10.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - cuml-cu13==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*cuml_unsuffixed]}
  depends_on_cudf:
    common:
      - output_types: conda
        packages:
          - &cudf_unsuffixed cudf==25.10.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - cudf-cu12==25.10.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - cudf-cu13==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*cudf_unsuffixed]}
  depends_on_pylibcugraph:
    common:
      - output_types: conda
        packages:
          - *pylibcugraph_unsuffixed
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - pylibcugraph-cu12==25.10.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - pylibcugraph-cu13==25.10.*,>=0.0.0a0
          - {matrix: null, packages: [*pylibcugraph_unsuffixed]}
  depends_on_cupy:
    common:
      - output_types: conda
        packages:
          - cupy>=13.6.0
    # NOTE: This is intentionally not broken into groups by a 'cuda_suffixed' selector like
    #       other packages with -cu{nn}x suffixes in this file.
    #       All RAPIDS wheel builds (including in devcontainers) expect cupy to be suffixed.
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - cupy-cuda12x>=13.6.0
          # fallback to CUDA 13 versions if 'cuda' is '13.*' or not provided
          - matrix:
            packages:
              - cupy-cuda13x>=13.6.0
  depends_on_cugraph_pyg:
    common:
      - output_types: conda
        packages:
          - cugraph-pyg==25.10.*,>=0.0.0a0
  depends_on_mkl:
    common:
      - output_types: conda
        packages:
          - mkl<2024.1.0
